version: "3.9"

name: my-microservices
services:
  users-database:
    image: postgres:14-alpine
    container_name: users-database
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_DB}
      PGDATA: ${DATABASE_PGDATA}
    ports:
      - ${DATABASE_PORT}:5432
    volumes:
      - ${DATABASE_PGDATA}
    env_file:
      - .env
    networks:
      my-ms:

  users-postgres-migration:
    container_name: users-migrations
    build:
      context: .
    restart: on-failure
    depends_on:
      - users-database
    volumes:
      - ./alembic.ini:/app/alembic.ini:ro
      - ./src_users/infrastructure/database/migrations:/app/src_users/infrastructure/database/migrations:ro
    command: ["python", "-m", "alembic", "upgrade", "head"]
    env_file:
      - .env
    networks:
      my-ms:

  users-fastapi-app:
    container_name: users-web-app
    build: .
    command: python run_users.py
    ports:
      - ${SITE_PORT}:${SITE_PORT}
    depends_on:
      - users-database
    restart: always
    env_file:
      - .env
    networks:
      my-ms:

  minio:
    container_name: minio-server
    image: minio/minio
    restart: always
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
      - minio_config:/root/.minio
    env_file:
      - .env
    command: server --address 0.0.0.0:${MINIO_PORT} --console-address :${MINIO_PORT_2} /data
    ports:
        - ${MINIO_HOST}:${MINIO_PORT}:${MINIO_PORT}
        - ${MINIO_PORT_2}:${MINIO_PORT_2}
    networks:
      my-ms:

networks:
  my-ms:
    driver: bridge

volumes:
  minio_data:
  minio_config:
